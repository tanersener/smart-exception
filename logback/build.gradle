sourceCompatibility = JavaVersion.VERSION_1_9
targetCompatibility = JavaVersion.VERSION_1_9

dependencies {
    api project(":smart-exception-java9")
    compileOnly('ch.qos.logback:logback-core:' + logbackVersion)
    compileOnly('ch.qos.logback:logback-classic:' + logbackVersion)
    testImplementation('net.logstash.logback:logstash-logback-encoder:' + logstashLogbackEncoderVersion)
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

apply plugin: 'maven-publish'
apply plugin: 'signing'

archivesBaseName = "smart-exception-logback"

ext {
    libraryName = "smart-exception-logback"
    artifact = "smart-exception-logback"
    libraryDescription = "smart-exception logback package"
    libraryVersion = version
}

if (project.hasProperty('release')) {

    File propertiesFile = project.rootProject.file('local.properties')
    if (propertiesFile.exists()) {
        Properties properties = new Properties()
        properties.load(new FileInputStream(propertiesFile))
        properties.each { name, value ->
            ext[name] = value
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = artifact
                from components.java

                pom {
                    name = libraryName
                    description = libraryDescription
                    url = siteUrl

                    licenses {
                        license {
                            name = licenseName
                            url = licenseUrl
                        }
                    }
                    developers {
                        developer {
                            id = developerId
                            name = developerName
                            email = developerEmail
                        }
                    }
                    scm {
                        connection = gitUrl
                        developerConnection = gitUrl
                        url = siteUrl
                    }
                }
            }
        }
        repositories {
            maven {
                def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                credentials {
                    username ossrhUsername
                    password ossrhPassword
                }
            }
        }
    }

    signing {
        sign publishing.publications.mavenJava
    }

}
